"""

This software reads a list of TXT files generated by XXXX software
and plot the Elevation Maps and Intersections of the segments in
the respective PNG file.

"""

from TrackReader import TrackFileReader, Track
from TrackViewer import TrackViewer, TrackPlotInfo
from pathlib import Path
import sys


def Plotear(fileName):
    
    reader = TrackFileReader()
    reader.ReadFile(fileName)
    track = reader.GetTrack()

    index = len(fileName)-fileName.find(".")-1
    imageName = fileName[:-index] + "png"

    title = Path(fileName).stem

    pInfo = TrackPlotInfo(track, title)
    pInfo.ExtractTrackData()

    viewer = TrackViewer()    
    plot1 = viewer.BuildPlot(pInfo, intersection_window=40)
    viewer.SavePlotAs(plot1, imageName)


def main():
        
    fileToParse = sys.argv[1:]
    nuevaLista = fileToParse

    nuevaLista = CheckArgs(fileToParse)
    finalList = CheckFileList(nuevaLista)
    

    for f in finalList:
        print ("Plotting file '", f, "' ...........", end= " ")
        Plotear(f)
        print ("Done!")



def CheckArgs(fileToParse):
    """ Check the Argv list to perfmorm different actions """
    nuevaLista = []

    # If no parameter is used: show error + example
    if len(fileToParse) == 0:
        print("Use with list of txt file to parse:\nI.e. 1: python plottxt.py file1.txt file2.txt file3.txt\nI.e. 2: python plottxt.py *")

    # If given an "*": examine all files in the folder
    if len(fileToParse) == 1 and fileToParse[0].endswith("*"):
        direct = Path(fileToParse[0][:-1])
        nuevaLista = []
        for elem in direct.iterdir():
            file = Path(elem)
            if file.is_file():
                nuevaLista.append(file.name)

        print ("\n\n\n")
        print (nuevaLista)
    return nuevaLista

def CheckFileList(fileToParse):
    """ Removes those files that don't exists in the list """
    finalList = list(fileToParse)

    for f in fileToParse:
        file = Path(f)
        if not file.exists() or not file.is_file():
            print ("File ", f, "not found or is not a file. Removed from list")
            finalList.remove(f)

    print ('\nFiles to plot:', finalList)

    return finalList

if __name__ == "__main__":
    main()